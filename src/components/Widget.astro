---
import fs from "node:fs/promises";

const pages = await fs.readdir("./src/pages/projects");
const routes = pages
    .map((p) => p.substring(0, p.lastIndexOf(".")))
    .sort((a, b) => +a.replace(/^\D+/g, "") - +b.replace(/^\D+/g, ""));

const total = routes.length;
let actual = +Astro.url.pathname.match(/\d+/)?.join("");

let prev = 1;
let next = 30;
let rand = Math.floor(Math.random() * total);
if (actual) {
    prev = actual - 1 > 0 ? actual - 1 : total;
    next = actual + 1 <= total ? actual + 1 : 1;
    rand = Math.floor(Math.random() * total + 1);
}
---

<script>
    const total = +document.querySelector("nav").dataset.total;
    const actual = +document.querySelector("nav").dataset.actual;
    let rand = Math.floor(Math.random() * total + 1);
    if (actual && rand === actual) {
        while (rand === actual) {
            rand = Math.floor(Math.random() * total + 1);
        }
    }
    document.querySelector<HTMLAnchorElement>(".rand").href =
        `/projects/a${rand}`;

    // on press of "s" save canvas screenshot
    document.addEventListener("keydown", (e) => {
        if (e.key === "s") {
            const canvas = document.querySelector(
                "canvas",
            ) as HTMLCanvasElement;
            if (!canvas) return;
            canvas.toBlob((blob) => {
                const a = document.createElement("a");
                a.href = URL.createObjectURL(blob);
                a.download = `micvolo-${new Date().toISOString()}.png`;
                a.click();
            });
        }
    });
</script>
<div class="widget">
    <nav data-total={routes.length - 1} data-actual={actual}>
        {
            actual && (
                <a href={`/projects/a${next}`} class="next">
                    Next
                </a>
            )
        }
        <a href=`/projects/a${rand}` class="rand">Random</a>
        {
            actual && (
                <a href={`/projects/a${prev}`} class="prev">
                    Prev
                </a>
            )
        }
        {
            actual && (
                <a href="/" class="home">
                    Home
                </a>
            )
        }
    </nav>
</div>
<style lang="scss">
    .widget {
        position: fixed;
        bottom: 5%;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        pointer-events: none;
        z-index: 999999;
        nav {
            pointer-events: auto;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 0.5rem;
            padding: 0.5rem;
            border-radius: 1rem;
            background-color: rgba(42, 42, 42, 0.6);
            backdrop-filter: blur(1rem);
            a {
                color: inherit;
                text-decoration: inherit;
                background-color: rgba(35, 35, 35, 0.8);
                color: rgba(220, 220, 220, 0.8);
                border-radius: 1rem;
                padding: 0.5rem 1rem;
                transition:
                    color 0.4s,
                    background-color 0.4s;
                &.home {
                    flex-basis: 100%;
                    text-align: center;
                }
                &.rand {
                    flex: 1;
                    text-align: center;
                }
                &:hover {
                    background-color: rgba(35, 35, 35, 1);
                    color: rgba(220, 220, 220, 1);
                }
            }
        }
    }
</style>
